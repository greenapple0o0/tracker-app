{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greeny\\\\Documents\\\\ytdownload\\\\tracker-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// frontend/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskList from \"./components/TaskList\";\nimport CountdownTimer from \"./components/CountdownTimer\";\nimport Login from \"./components/Login\";\nimport \"./styles/app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [tasks, setTasks] = useState([]);\n  const [text, setText] = useState(\"\");\n\n  // Login success handler\n  const handleLogin = username => {\n    setUser(username);\n  };\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:5000/tasks\");\n      setTasks(res.data);\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err);\n    }\n  };\n  useEffect(() => {\n    if (!user) return;\n    fetchTasks();\n    const interval = setInterval(fetchTasks, 2000); // live updates\n    return () => clearInterval(interval);\n  }, [user]);\n\n  // Add task\n  const addTask = async () => {\n    if (!text.trim()) return;\n    try {\n      await axios.post(\"http://localhost:5000/tasks\", {\n        text\n      });\n      setText(\"\");\n      fetchTasks();\n    } catch (err) {\n      console.error(\"Error adding task:\", err);\n      alert(\"Failed to add task.\");\n    }\n  };\n\n  // Toggle checkbox\n  const toggleTask = async (id, person) => {\n    try {\n      await axios.put(`http://localhost:5000/tasks/${id}`, {\n        person\n      });\n      fetchTasks();\n    } catch (err) {\n      console.error(\"Error toggling task:\", err);\n    }\n  };\n\n  // Delete task\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\n      fetchTasks();\n    } catch (err) {\n      console.error(\"Error deleting task:\", err);\n    }\n  };\n\n  // Show login page if not logged in\n  if (!user) return /*#__PURE__*/_jsxDEV(Login, {\n    onLogin: handleLogin\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(CountdownTimer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", user, \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a new task...\",\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jZCmW8M5N1cHQzXmt9jPW1npIlU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskList","CountdownTimer","Login","jsxDEV","_jsxDEV","App","_s","user","setUser","tasks","setTasks","text","setText","handleLogin","username","fetchTasks","res","get","data","err","console","error","interval","setInterval","clearInterval","addTask","trim","post","alert","toggleTask","id","person","put","deleteTask","delete","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","className","children","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/greeny/Documents/ytdownload/tracker-app/frontend/src/App.js"],"sourcesContent":["// frontend/src/App.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport CountdownTimer from \"./components/CountdownTimer\";\r\nimport Login from \"./components/Login\";\r\nimport \"./styles/app.css\";\r\n\r\nexport default function App() {\r\n  const [user, setUser] = useState(null);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  // Login success handler\r\n  const handleLogin = (username) => {\r\n    setUser(username);\r\n  };\r\n\r\n  // Fetch tasks\r\n  const fetchTasks = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5000/tasks\");\r\n      setTasks(res.data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching tasks:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    fetchTasks();\r\n    const interval = setInterval(fetchTasks, 2000); // live updates\r\n    return () => clearInterval(interval);\r\n  }, [user]);\r\n\r\n  // Add task\r\n  const addTask = async () => {\r\n    if (!text.trim()) return;\r\n    try {\r\n      await axios.post(\"http://localhost:5000/tasks\", { text });\r\n      setText(\"\");\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error(\"Error adding task:\", err);\r\n      alert(\"Failed to add task.\");\r\n    }\r\n  };\r\n\r\n  // Toggle checkbox\r\n  const toggleTask = async (id, person) => {\r\n    try {\r\n      await axios.put(`http://localhost:5000/tasks/${id}`, { person });\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error(\"Error toggling task:\", err);\r\n    }\r\n  };\r\n\r\n  // Delete task\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/tasks/${id}`);\r\n      fetchTasks();\r\n    } catch (err) {\r\n      console.error(\"Error deleting task:\", err);\r\n    }\r\n  };\r\n\r\n  // Show login page if not logged in\r\n  if (!user) return <Login onLogin={handleLogin} />;\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <CountdownTimer />\r\n      <h1>Welcome, {user}!</h1>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a new task...\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n        <button onClick={addTask}>Add Task</button>\r\n      </div>\r\n\r\n      <TaskList tasks={tasks} toggleTask={toggleTask} deleteTask={deleteTask} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}