{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\greeny\\\\Documents\\\\ytdownload\\\\tracker-app\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport TaskList from \"./components/TaskList\";\nimport \"./styles/app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [text, setText] = useState(\"\");\n  const [user, setUser] = useState(\"Person 1\"); // active user\n\n  // Fetch all tasks\n  const fetchTasks = async () => {\n    const res = await axios.get(\"http://localhost:5000/tasks\");\n    setTasks(res.data);\n  };\n  useEffect(() => {\n    fetchTasks();\n    // optional: refresh every 2 seconds for live updates\n    const interval = setInterval(fetchTasks, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  // Add a task\n  const addTask = async () => {\n    if (!text.trim()) return;\n    const res = await axios.post(\"http://localhost:5000/tasks\", {\n      text,\n      user\n    });\n    setTasks([...tasks, res.data]);\n    setText(\"\");\n  };\n\n  // Toggle a task (only if current user owns it)\n  const toggleTask = async (id, taskUser) => {\n    if (taskUser !== user) return alert(\"You can't toggle someone else's task!\");\n    await axios.put(`http://localhost:5000/tasks/${id}`, {\n      user\n    });\n    fetchTasks();\n  };\n\n  // Delete a task (only if current user owns it)\n  const deleteTask = async (id, taskUser) => {\n    if (taskUser !== user) return alert(\"You can't delete someone else's task!\");\n    await axios.delete(`http://localhost:5000/tasks/${id}`, {\n      data: {\n        user\n      }\n    });\n    fetchTasks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u2705 Shared Tracker App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: user === \"Person 1\" ? \"active\" : \"\",\n        onClick: () => setUser(\"Person 1\"),\n        children: \"Person 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: user === \"Person 2\" ? \"active\" : \"\",\n        onClick: () => setUser(\"Person 2\"),\n        children: \"Person 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: `Add a task as ${user}...`,\n        value: text,\n        onChange: e => setText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: tasks,\n      toggleTask: toggleTask,\n      deleteTask: deleteTask,\n      currentUser: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"S6OeEeQc1pp1a/ZumAgm92aLMt0=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskList","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","text","setText","user","setUser","fetchTasks","res","get","data","interval","setInterval","clearInterval","addTask","trim","post","toggleTask","id","taskUser","alert","put","deleteTask","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","value","onChange","e","target","currentUser","_c","$RefreshReg$"],"sources":["C:/Users/greeny/Documents/ytdownload/tracker-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport TaskList from \"./components/TaskList\";\r\nimport \"./styles/app.css\";\r\n\r\nexport default function App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [text, setText] = useState(\"\");\r\n  const [user, setUser] = useState(\"Person 1\"); // active user\r\n\r\n  // Fetch all tasks\r\n  const fetchTasks = async () => {\r\n    const res = await axios.get(\"http://localhost:5000/tasks\");\r\n    setTasks(res.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n    // optional: refresh every 2 seconds for live updates\r\n    const interval = setInterval(fetchTasks, 2000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  // Add a task\r\n  const addTask = async () => {\r\n    if (!text.trim()) return;\r\n    const res = await axios.post(\"http://localhost:5000/tasks\", { text, user });\r\n    setTasks([...tasks, res.data]);\r\n    setText(\"\");\r\n  };\r\n\r\n  // Toggle a task (only if current user owns it)\r\n  const toggleTask = async (id, taskUser) => {\r\n    if (taskUser !== user) return alert(\"You can't toggle someone else's task!\");\r\n    await axios.put(`http://localhost:5000/tasks/${id}`, { user });\r\n    fetchTasks();\r\n  };\r\n\r\n  // Delete a task (only if current user owns it)\r\n  const deleteTask = async (id, taskUser) => {\r\n    if (taskUser !== user) return alert(\"You can't delete someone else's task!\");\r\n    await axios.delete(`http://localhost:5000/tasks/${id}`, { data: { user } });\r\n    fetchTasks();\r\n  };\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>âœ… Shared Tracker App</h1>\r\n\r\n      <div className=\"user-buttons\">\r\n        <button\r\n          className={user === \"Person 1\" ? \"active\" : \"\"}\r\n          onClick={() => setUser(\"Person 1\")}\r\n        >\r\n          Person 1\r\n        </button>\r\n        <button\r\n          className={user === \"Person 2\" ? \"active\" : \"\"}\r\n          onClick={() => setUser(\"Person 2\")}\r\n        >\r\n          Person 2\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder={`Add a task as ${user}...`}\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n        <button onClick={addTask}>Add Task</button>\r\n      </div>\r\n\r\n      <TaskList tasks={tasks} toggleTask={toggleTask} deleteTask={deleteTask} currentUser={user} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,6BAA6B,CAAC;IAC1DP,QAAQ,CAACM,GAAG,CAACE,IAAI,CAAC;EACpB,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC;IACZ;IACA,MAAMI,QAAQ,GAAGC,WAAW,CAACL,UAAU,EAAE,IAAI,CAAC;IAC9C,OAAO,MAAMM,aAAa,CAACF,QAAQ,CAAC;EACtC,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI,CAACX,IAAI,CAACY,IAAI,CAAC,CAAC,EAAE;IAClB,MAAMP,GAAG,GAAG,MAAMb,KAAK,CAACqB,IAAI,CAAC,6BAA6B,EAAE;MAAEb,IAAI;MAAEE;IAAK,CAAC,CAAC;IAC3EH,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEO,GAAG,CAACE,IAAI,CAAC,CAAC;IAC9BN,OAAO,CAAC,EAAE,CAAC;EACb,CAAC;;EAED;EACA,MAAMa,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,QAAQ,KAAK;IACzC,IAAIA,QAAQ,KAAKd,IAAI,EAAE,OAAOe,KAAK,CAAC,uCAAuC,CAAC;IAC5E,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,+BAA+BH,EAAE,EAAE,EAAE;MAAEb;IAAK,CAAC,CAAC;IAC9DE,UAAU,CAAC,CAAC;EACd,CAAC;;EAED;EACA,MAAMe,UAAU,GAAG,MAAAA,CAAOJ,EAAE,EAAEC,QAAQ,KAAK;IACzC,IAAIA,QAAQ,KAAKd,IAAI,EAAE,OAAOe,KAAK,CAAC,uCAAuC,CAAC;IAC5E,MAAMzB,KAAK,CAAC4B,MAAM,CAAC,+BAA+BL,EAAE,EAAE,EAAE;MAAER,IAAI,EAAE;QAAEL;MAAK;IAAE,CAAC,CAAC;IAC3EE,UAAU,CAAC,CAAC;EACd,CAAC;EAED,oBACET,OAAA;IAAK0B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B3B,OAAA;MAAA2B,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE7B/B,OAAA;MAAK0B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B3B,OAAA;QACE0B,SAAS,EAAEnB,IAAI,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAG;QAC/CyB,OAAO,EAAEA,CAAA,KAAMxB,OAAO,CAAC,UAAU,CAAE;QAAAmB,QAAA,EACpC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACT/B,OAAA;QACE0B,SAAS,EAAEnB,IAAI,KAAK,UAAU,GAAG,QAAQ,GAAG,EAAG;QAC/CyB,OAAO,EAAEA,CAAA,KAAMxB,OAAO,CAAC,UAAU,CAAE;QAAAmB,QAAA,EACpC;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN/B,OAAA;MAAK0B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B3B,OAAA;QACEiC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAE,iBAAiB3B,IAAI,KAAM;QACxC4B,KAAK,EAAE9B,IAAK;QACZ+B,QAAQ,EAAGC,CAAC,IAAK/B,OAAO,CAAC+B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACF/B,OAAA;QAAQgC,OAAO,EAAEhB,OAAQ;QAAAW,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eAEN/B,OAAA,CAACF,QAAQ;MAACK,KAAK,EAAEA,KAAM;MAACgB,UAAU,EAAEA,UAAW;MAACK,UAAU,EAAEA,UAAW;MAACe,WAAW,EAAEhC;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAEV;AAAC7B,EAAA,CAxEuBD,GAAG;AAAAuC,EAAA,GAAHvC,GAAG;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}